package in.co.bel.ims.initial.entity;
// Generated 08-Nov-2022, 2:19:11 pm by Hibernate Tools 4.3.5.Final

import java.time.LocalDateTime;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.Size;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.id.enhanced.SequenceStyleGenerator;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * AuditTrail generated by hbm2java
 */
@Entity
@Table(name = "audit_trail", schema = "system")
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class AuditTrail implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private int id;
	private String mobileNo;
	private String username;
	private String event;
	private String level;
	private LocalDateTime createdTime;
	private Boolean deleted;
	private String clientIp;
	private String eventCategory;

	public AuditTrail() {
	}

	public AuditTrail(int id) {
		this.id = id;
	}

	public AuditTrail(int id, String mobileNo, String username, String event, String level, LocalDateTime createdTime,
			Boolean deleted, String clientIp, String eventCategory) {
		this.id = id;
		this.mobileNo = mobileNo;
		this.username = username;
		this.event = event;
		this.level = level;
		this.createdTime = createdTime;
		this.deleted = deleted;
		this.clientIp = clientIp;
		this.eventCategory = eventCategory;
	}

	@Id
	@GenericGenerator(name = "sequencePerEntityGenerator", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator", parameters = {
			@Parameter(name = "prefer_sequence_per_entity", value = "true"),
			@Parameter(name = "initial_value", value = "1"),
			@Parameter(name = SequenceStyleGenerator.INCREMENT_PARAM, value = "1") })
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "sequencePerEntityGenerator")
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "mobile_no", length = 20)
	@Size(min=10, max=10, message="Mobile No. should not be more than 10 characters")
	public String getMobileNo() {
		return this.mobileNo;
	}

	public void setMobileNo(String mobileNo) {
		this.mobileNo = mobileNo;
	}

	@Column(name = "username", length = 200)
	@Size(max=200, message="Name should not be more than 200 characters")
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "event", length = 500)
	public String getEvent() {
		return this.event;
	}

	public void setEvent(String event) {
		this.event = event;
	}

	@Column(name = "level", length = 50)
	@Size(max=50, message="Name should not be more than 50 characters")
	public String getLevel() {
		return this.level;
	}

	public void setLevel(String level) {
		this.level = level;
	}

	@Column(name = "created_time", length = 15)
	public LocalDateTime getCreatedTime() {
		return this.createdTime;
	}

	public void setCreatedTime(LocalDateTime createdTime) {
		this.createdTime = createdTime;
	}

	@Column(name = "deleted")
	public Boolean getDeleted() {
		return this.deleted;
	}

	public void setDeleted(Boolean deleted) {
		this.deleted = deleted;
	}

	@Column(name = "client_ip", length = 50)
	public String getClientIp() {
		return this.clientIp;
	}

	public void setClientIp(String clientIp) {
		this.clientIp = clientIp;
	}

	@Column(name = "event_category", length = 50)
	public String getEventCategory() {
		return this.eventCategory;
	}

	public void setEventCategory(String eventCategory) {
		this.eventCategory = eventCategory;
	}

}
